version: '3.8'

services:
  flask:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/usr/src/app
    environment:
      - FLASK_ENV=development  
    ports:
      - "5000:5000"  # Прокси на локальный порт 5000

  flask_site2:  # Новый Flask-сайт
    build:
      context: ./templates/tasks/web/1  # Директория нового приложения
      dockerfile: Dockerfile
    volumes:
      - ./templates/tasks/web/1:/usr/src/app  # Монтируем код приложения
    environment:
      - FLASK_ENV=development
    ports:
      - "5001:5001"  # Прокси на порт 5001

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./static:/usr/src/app/static 
    ports:
      - "80:80"
    depends_on:
      - flask
      - flask_site2  # Добавляем зависимость от нового сайта

  ftp_server:  # Новый FTP-сервер
    build:
      context: ./templates/tasks/ppc/2  # Укажите директорию, где находится Dockerfile для FTP
      dockerfile: Dockerfile
    ports:
      - "21:21"  # FTP порт
      - "30000-30010:30000-30010"  # Пассивные порты
    volumes:
      - ftp_data:/home/ftpuser/ftp_root  # Монтируем данные FTP
    environment:
      - FTP_USER=ftpuser
      - FTP_PASSWORD=ftpuser

  node:
    build:
      context: ./templates/tasks/ppc/1
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./templates/tasks/ppc/1:/usr/src/app
    environment:
      NODE_ENV: production
    depends_on:
      - nginx

  socket_server:  # Сервис шифратора сообщений
    build:
      context: ./templates/tasks/crypto/2  # Директория с Dockerfile шифратора
      dockerfile: Dockerfile
    ports:
      - "11111:11111"  # Прокси на порт 11111
    environment:
      FLAG: "limeCTF{1t_15_hard_t0_b3_a_5py}"  # Переменная окружения

volumes:
  ftp_data:
